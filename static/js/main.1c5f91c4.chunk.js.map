{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","onClick","toggleMode","htmlFor","Textform","useState","text","settext","style","color","header","value","onChange","event","target","backgroundColor","rows","console","log","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatlize","msge","App","setmode","setalert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oMAOe,SAASA,EAAOC,GAC3B,OACI,8BAEF,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACJ,sBAAKD,UAAU,kBAAf,UAEE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,qBAAIL,UAAU,kCAAd,UACE,oBAAIA,UAAU,WAAd,SAEE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,oBAEF,oBAAIF,UAAU,WAAd,SAEE,mBAAGA,UAAU,WAAWE,KAAK,SAA7B,SAAuCH,EAAMO,aAU/C,sBAAKN,UAAS,sCAA+C,UAAdD,EAAME,KAAiB,OAAO,SAA7E,UACI,uBAAOD,UAAU,mBAAmBO,QAASR,EAAMS,WAAYJ,KAAK,WAAWC,GAAG,2BACjF,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,2CCpCE,SAASC,EAASX,GAE7B,IAyCA,EAAwBY,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,qCACA,sBAAKb,UAAU,YAAYc,MAAO,CAAEC,MAAuB,SAAfhB,EAAME,KAAkB,QAAU,SAA9E,UACM,6BAAKF,EAAMiB,SACb,qBAAKhB,UAAU,OAAf,SAEQ,0BAAUA,UAAU,oBAAoBiB,MAAOL,EAAMM,SAxC9C,SAACC,GAEpBN,EAAQM,EAAMC,OAAOH,QAsCsEH,MAAO,CAAEO,gBAAiC,SAAftB,EAAME,KAAkB,OAAS,QAAQc,MAAqB,SAAfhB,EAAME,KAAkB,QAAU,SAAYI,GAAG,QAAQiB,KAAK,QAE/N,wBAAQtB,UAAU,uBAAwBO,QApD5B,WAElBgB,QAAQC,IAAI,yBACZ,IAAIC,EAAUb,EAAKc,cACnBb,EAAQY,GACR1B,EAAM4B,UAAU,6CAA6C,YA+CzD,+BACA,wBAAQ3B,UAAU,uBAAuBO,QAtC3B,WAClB,IAAIkB,EAAUb,EAAKgB,cACnBf,EAAQY,GACR1B,EAAM4B,UAAU,6CAA6C,YAmCzD,+BACA,wBAAQ3B,UAAU,uBAAuBO,QAlCxB,WAErBM,EADc,KAiCV,wBACA,wBAAQb,UAAU,uBAAuBO,QA9B9B,WACf,IAAIK,EAAOiB,SAASC,eAAe,SACnClB,EAAKmB,SACLC,UAAUC,UAAUC,UAAUtB,EAAKK,OACnClB,EAAM4B,UAAU,6BAA6B,YA0BzC,uBACA,wBAAQ3B,UAAU,uBAAuBO,QAvBvB,WACtB,IAAIkB,EAAUb,EAAKuB,MAAM,SACzBtB,EAAQY,EAAQW,KAAK,MAErBrC,EAAM4B,UAAU,+CAA+C,YAmB3D,8BAGJ,sBAAK3B,UAAU,iBAAkBc,MAAO,CAAEC,MAAuB,SAAfhB,EAAME,KAAkB,QAAU,SAApF,UACQ,mDACA,4BAAG,8BAAIW,EAAKuB,MAAM,KAAKE,OAApB,aAAsCzB,EAAKyB,YAC9C,8BAAI,KAAMzB,EAAKuB,MAAM,KAAKE,OAA1B,mBACA,yCACA,4BAAIzB,UClEL,SAAS0B,EAAMvC,GAO1B,OAECA,EAAMwC,OAAU,sBAAKvC,UAAS,sBAAiBD,EAAMwC,MAAMnC,KAA7B,gCAAiEoC,KAAK,QAApF,UACT,iCATU,SAACC,GACf,IAAMC,EAAQD,EAAKb,cACnB,OAAOc,EAAMC,OAAO,GAAGjB,cAAgBgB,EAAME,MAAM,GAOtCC,CAAU9C,EAAMwC,MAAMnC,QADtB,MACyCL,EAAMwC,MAAMO,QCqE3DC,MAlEf,WACE,MAAwBpC,mBAAS,SAAjC,mBAAOV,EAAP,KAAa+C,EAAb,KAEA,EAA0BrC,mBAAS,MAAnC,mBAAO4B,EAAP,KAAcU,EAAd,KAEMtB,EAAY,SAACuB,EAAQ9C,GACzB6C,EAAS,CACPH,KAAMI,EACN9C,KAAMA,IAER+C,YAAW,WACTF,EAAS,QACR,OA8BL,OACE,qCAEE,cAACnD,EAAD,CAAQK,MAAM,YAAYF,KAAMA,EAAMO,WA9BvB,WACJ,UAATP,GACF+C,EAAQ,QACRnB,SAASuB,KAAKtC,MAAMO,gBAAkB,UACtCM,EAAU,4BAA6B,WAEvCE,SAAS1B,MAAT,0BAcA6C,EAAQ,SACRnB,SAASuB,KAAKtC,MAAMO,gBAAkB,SACtCM,EAAU,6BAA8B,WAExCE,SAAS1B,MAAT,6BAQA,cAACmC,EAAD,CAAOC,MAASA,IAEZ,qBAAKvC,UAAU,iBAAf,SAOQ,cAACU,EAAD,CAAUiB,UAAWA,EAAWX,OAAO,4BAA4Bf,KAAMA,UC3D5EoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAnC,SAASC,eAAe,SAM5BuB,K","file":"static/js/main.1c5f91c4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n                    \r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.about}</Link> */}\r\n          <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n        </li>\r\n       \r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n        <div className={`form-check form-switch text-${props.mode ==='light'? 'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n             <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n        </div>       \r\n\r\n    </div>\r\n  </div>\r\n      </nav>  \r\n            \r\n        </div>\r\n    )\r\n}\r\n//that is how we insure that we will send the string\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n}\r\n\r\n// This is how we cant fix a default values navbagation bar\r\n// Navbar.defaultProps = {\r\n//     title: \"set the title\",\r\n//     about: \"set the About\"\r\n// }\r\n","import React,{useState} from  'react'\r\n\r\nexport default function Textform(props) {\r\n   \r\n    const handleUpClick = () =>\r\n    {\r\n        console.log('Uppercase was clicked');\r\n        let newtext = text.toUpperCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Your text has been converted to Uppercase \",\"success\")\r\n    }\r\n    /*After this, you will be able to enter text in your document and by pressing \r\n    the ‘Convert to uppercase’ you will be able to convert your text in uppercase*/\r\n    \r\n    const handleOnChange = (event) => {\r\n        \r\n        settext(event.target.value);\r\n        \r\n    }\r\n    const handleLoClick = () => {\r\n        let newtext = text.toLowerCase();\r\n        settext(newtext);\r\n        props.showAlert(\"Your text has been converted to lowercase \",\"success\")\r\n    }\r\n    const handleclearClick = () => {\r\n        let newtext = '';\r\n        settext(newtext);\r\n    }\r\n    \r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Your text has been copied \",\"success\")\r\n        // alert(\"Copied the text: \" );\r\n    }\r\n    \r\n    const handleExtraSpaces = () => {\r\n        var newtext = text.split(/[  ]+/);\r\n        settext(newtext.join(\" \"))\r\n        // alert(\"Extra Spaces remove from text \" );\r\n        props.showAlert(\"Extra spaces has been remove from your text \",\"success\")\r\n    }\r\n    \r\n    \r\n    const [text, settext] = useState('');\r\n    // text = (\"mahdfksjhaksdjfhkj\")wrong way to change the state\r\n    // settext=(\"ajkhskjhdfkjhkldf\")right way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{ color:  props.mode === 'dark' ? 'white' : 'black' }}>\r\n              <h1>{props.header}</h1>\r\n            <div className=\"mb-3\">\r\n           \r\n                    <textarea className=\"form-control my-2\" value={text} onChange={handleOnChange} style={{ backgroundColor:  props.mode === 'dark' ? 'grey' : 'white',color:props.mode === 'dark' ? 'white' : 'black'  }} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\"  onClick = {handleUpClick} >Convert Uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleLoClick} >Convert Lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleclearClick} >Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleCopy} >Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick = {handleExtraSpaces} >Remove Spaces</button>\r\n            \r\n            </div>\r\n        <div className=\"container my-3\"  style={{ color:  props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1>Your Text Summary</h1>\r\n                <p><b>{text.split(\" \").length} Word and {text.length}</b></p>\r\n                <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n                \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatlize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n        \r\n        \r\n    }\r\n    return (\r\n    \r\n     props.alert &&  <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatlize(props.alert.type)}</strong> : {props.alert.msge}\r\n       \r\n      </div>\r\n    )\r\n}\r\n","\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\n// import About from './component/About';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setmode] = useState('light')\n\n  const [alert, setalert] = useState(null)\n\n  const showAlert = (message,type) => {\n    setalert({\n      msge: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null)\n    }, 1500);\n  }\n  \n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = \"#042d56\"\n      showAlert(\"dark mode has been enable\", \"success\")\n      // this how we create custom title for every function\n      document.title = `Textutile - Dark Mode`;\n       \n      // this is how we can irritate the User\n      // setInterval(() => {\n      //   document.title = `Textutile is Amazing`;\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = `Download Textutile`;\n      // }, 1500);\n\n          \n    }\n    else {\n      setmode('light') \n      document.body.style.backgroundColor = \" white\"\n      showAlert(\"light mode has been enable\", \"success\")\n      // this how we create custom title for every function\n      document.title = `Textutile - Light Mode`;\n    }\n }\n  return (\n    <>\n        {/* <Router> */}\n      <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n      \n      <Alert alert = {alert}/>\n           {/* <Navbar/> */}\n          <div className=\"container my-5\">\n              {/* <Switch> */}\n                  {/* <Route path=\"/about\"> */}\n                  {/* <About /> */}\n                  {/* </Route> */}\n                  {/* <Route path=\"/\"> */}\n                    {/*showAlert={showAlert} it is use to pass the Function */} \n                  <Textform showAlert={showAlert} header=\"Enter the Text to analyze\" mode={mode} />  \n                  {/* </Route> */}\n                {/* </Switch> */}\n                  </div>\n        {/* </Router> */}\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}